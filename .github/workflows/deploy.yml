name: Deploy Application

on:
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2
          
      - name: Create and upload backend package
        run: |
          cd backend
          zip -r ../backend-deploy.zip . -x "*.pyc" "__pycache__/*"
          cd ..
          aws s3 cp backend-deploy.zip s3://launch-artifacts/
          
      - name: Deploy backend
        run: |
          aws ssm send-command \
            --instance-ids ${{ secrets.BACKEND_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "cd /opt/launch",
              "aws s3 cp s3://launch-artifacts/backend-deploy.zip .",
              "sudo systemctl stop gunicorn",
              "sudo rm -rf backend/*",
              "sudo unzip -o backend-deploy.zip -d backend/",
              "cd backend",
              "python -m pip install --upgrade pip",
              "pip install -r requirements.txt",
              "sudo systemctl daemon-reload",
              "sudo systemctl start gunicorn",
              "python scripts/test_db_connection.py"
            ]'

  deploy-frontend:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2
          
      - name: Install dependencies and build
        run: |
          cd frontend
          npm install --force
          npm run build
          zip -r ../frontend-deploy.zip dist
          
      - name: Upload and deploy frontend
        run: |
          aws s3 cp frontend-deploy.zip s3://launch-artifacts/
          aws ssm send-command \
            --instance-ids ${{ secrets.FRONTEND_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "cd /opt/launch",
              "aws s3 cp s3://launch-artifacts/frontend-deploy.zip .",
              "sudo systemctl stop nginx",
              "sudo rm -rf frontend/*",
              "sudo unzip -o frontend-deploy.zip -d frontend/",
              "sudo mv frontend/dist/* frontend/",
              "sudo rm -rf frontend/dist",
              "sudo systemctl start nginx"
            ]' 